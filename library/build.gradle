apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

final def log = project.logger
final def variants = project.android.libraryVariants

variants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api "org.jetbrains.anko:anko:$anko_version"
    api "org.jetbrains.anko:anko-commons:$anko_version"
    api "org.jetbrains.anko:anko-sqlite:$anko_version"
    api "com.android.support:appcompat-v7:${support_version}"
    api "com.android.support:design:${support_version}"
    api "com.android.support:gridlayout-v7:${support_version}"
    api "com.android.support:support-v13:${support_version}"
    api "com.android.support:mediarouter-v7:${support_version}"
    api "com.android.support:cardview-v7:${support_version}"
    api "com.android.support:palette-v7:${support_version}"
    api "com.android.support:leanback-v17:${support_version}"
    api "com.android.support:recyclerview-v7:${support_version}"
    api "com.android.support:exifinterface:${support_version}"
    api "com.android.support:support-vector-drawable:${support_version}"
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.android.support:multidex:1.0.3'
    api 'commons-net:commons-net:3.6'
    api 'com.alibaba:fastjson:1.2.49'
    api 'com.squareup.picasso:picasso:2.71828'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'com.github.tbruyelle:rxpermissions:0.10.2'
    api 'bouncycastle:bcprov-jdk14:140'
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-14'
    api 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-14'

    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
